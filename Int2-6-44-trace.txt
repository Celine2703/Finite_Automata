
Which automaton do you want? (type 0 to quit)
-> 44
|    |   State | a      | b      |
|:---|--------:|:-------|:-------|
| I  |       0 | [1, 2] | [2]    |
|    |       1 | --     | [3]    |
| F  |       2 | [3]    | [2]    |
| F  |       3 | [2, 3] | [2, 3] |
The automaton is standard
Not deterministic: more than one transition for a letter in state 0
Not complete: transition to nowhere in state 1

What do you want to do?

1- Standardisation
2- Determinization and completion
3- Minimization
4- Read a word
5- Complementary automaton
6- Select another automaton
0- Quit

-> 1
This automaton is already standard.

What do you want to do?

1- Standardisation
2- Determinization and completion
3- Minimization
4- Read a word
5- Complementary automaton
6- Select another automaton
0- Quit

-> 2
Determinization done, the automaton is already complete, it is now:

|    | State   | a     | b     |
|:---|:--------|:------|:------|
| I  | 0       | [1·2] | [2]   |
| F  | 1·2     | [3]   | [2·3] |
| F  | 2       | [3]   | [2]   |
| F  | 3       | [2·3] | [2·3] |
| F  | 2·3     | [2·3] | [2·3] |

What do you want to do?

1- Standardisation
2- Determinization and completion
3- Minimization
4- Read a word
5- Complementary automaton
6- Select another automaton
0- Quit

-> 3
The state [0] is renamed:  0
The state [1, 2] is renamed:  1
The state [2] is renamed:  2
The state [3] is renamed:  3
The state [2, 3] is renamed:  4

Separating final states and other states:

Partition number ° 1
|    |   State | a   | b   |
|:---|--------:|:----|:----|
| F  |       1 | [3] | [4] |
| F  |       2 | [3] | [2] |
| F  |       3 | [4] | [4] |
| F  |       4 | [4] | [4] |
Partition number ° 2
|    |   State | a   | b   |
|:---|--------:|:----|:----|
| I  |       0 | [1] | [2] |

First iteration of the minimisation:

Partition number ° 1
|    |   State | a   | b   |
|:---|--------:|:----|:----|
| F  |       1 | [3] | [4] |
| F  |       2 | [3] | [2] |
| F  |       3 | [4] | [4] |
| F  |       4 | [4] | [4] |
Partition number ° 2
|    |   State | a   | b   |
|:---|--------:|:----|:----|
| I  |       0 | [1] | [2] |

The state 4 will be merged into the state 1 !

The state 3 will be merged into the state 1 !

The state 2 will be merged into the state 1 !

Minimization done, the automaton is now:
|    |   State | a   | b   |
|:---|--------:|:----|:----|
| I  |       0 | [1] | [2] |
| F  |       1 | [1] | [1] |

What do you want to do?

1- Standardisation
2- Determinization and completion
3- Minimization
4- Read a word
5- Complementary automaton
6- Select another automaton
0- Quit

-> 4
Input your word. (type 'end' to return to the menu)
-> aaa
Yes: this word has been recognized!
Another word? (type 'end' to return to the menu)
-> abab
Yes: this word has been recognized!
Another word? (type 'end' to return to the menu)
-> end
What do you want to do?

1- Standardisation
2- Determinization and completion
3- Minimization
4- Read a word
5- Complementary automaton
6- Select another automaton
0- Quit

-> 5
Complementary automaton with the CDFA:

|     | State   | a     | b     |
|:----|:--------|:------|:------|
| I F | 0       | [1·2] | [2]   |
|     | 1·2     | [3]   | [2·3] |
|     | 2       | [3]   | [2]   |
|     | 3       | [2·3] | [2·3] |
|     | 2·3     | [2·3] | [2·3] |

What do you want to do?

1- Standardisation
2- Determinization and completion
3- Minimization
4- Read a word
5- Complementary automaton
6- Select another automaton
0- Quit

-> 0
Goodbye.

