
Which automaton do you want? (type 0 to quit)
-> 29
|    |   State | a      |
|:---|--------:|:-------|
| F  |       0 | [4]    |
| I  |       1 | [2, 4] |
|    |       2 | [3]    |
| F  |       3 | [0, 2] |
|    |       4 | [3, 5] |
|    |       5 | [0]    |
The automaton is standard
Not deterministic: more than one transition for a letter in state 1
The automaton is complete

What do you want to do?

1- Standardisation
2- Determinization and completion
3- Minimization
4- Read a word
5- Complementary automaton
6- Select another automaton
0- Quit

-> 1
This automaton is already standard.

What do you want to do?

1- Standardisation
2- Determinization and completion
3- Minimization
4- Read a word
5- Complementary automaton
6- Select another automaton
0- Quit

-> 2
Determinization done, the automaton is already complete, it is now:

|    | State     | a           |
|:---|:----------|:------------|
| I  | 1         | [2·4]       |
|    | 2·4       | [3·5]       |
| F  | 3·5       | [0·2]       |
| F  | 0·2       | [3·4]       |
| F  | 3·4       | [0·2·3·5]   |
| F  | 0·2·3·5   | [0·2·3·4]   |
| F  | 0·2·3·4   | [0·2·3·4·5] |
| F  | 0·2·3·4·5 | [0·2·3·4·5] |

What do you want to do?

1- Standardisation
2- Determinization and completion
3- Minimization
4- Read a word
5- Complementary automaton
6- Select another automaton
0- Quit

-> 3
The state [1] is renamed:  0
The state [2, 4] is renamed:  1
The state [3, 5] is renamed:  2
The state [0, 2] is renamed:  3
The state [3, 4] is renamed:  4
The state [0, 2, 3, 5] is renamed:  5
The state [0, 2, 3, 4] is renamed:  6
The state [0, 2, 3, 4, 5] is renamed:  7

Separating final states and other states:

Partition number ° 1
|    |   State | a   |
|:---|--------:|:----|
| F  |       2 | [3] |
| F  |       3 | [4] |
| F  |       4 | [5] |
| F  |       5 | [6] |
| F  |       6 | [7] |
| F  |       7 | [7] |
Partition number ° 2
|    |   State | a   |
|:---|--------:|:----|
| I  |       0 | [1] |
|    |       1 | [2] |

First iteration of the minimisation:

Partition number ° 1
|    |   State | a   |
|:---|--------:|:----|
| F  |       2 | [3] |
| F  |       3 | [4] |
| F  |       4 | [5] |
| F  |       5 | [6] |
| F  |       6 | [7] |
| F  |       7 | [7] |
Partition number ° 2
|    |   State | a   |
|:---|--------:|:----|
| I  |       0 | [1] |
Partition number ° 3
|    |   State | a   |
|:---|--------:|:----|
|    |       1 | [2] |

The state 7 will be merged into the state 2 !

The state 6 will be merged into the state 2 !

The state 5 will be merged into the state 2 !

The state 4 will be merged into the state 2 !

The state 3 will be merged into the state 2 !

Minimization done, the automaton is now:
|    |   State | a   |
|:---|--------:|:----|
| I  |       0 | [1] |
|    |       1 | [2] |
| F  |       2 | [2] |

What do you want to do?

1- Standardisation
2- Determinization and completion
3- Minimization
4- Read a word
5- Complementary automaton
6- Select another automaton
0- Quit

-> 4
Input your word. (type 'end' to return to the menu)
-> aaa
Yes: this word has been recognized!
Another word? (type 'end' to return to the menu)
-> abab
No: this word has not been recognized!
Another word? (type 'end' to return to the menu)
-> end
What do you want to do?

1- Standardisation
2- Determinization and completion
3- Minimization
4- Read a word
5- Complementary automaton
6- Select another automaton
0- Quit

-> 5
Complementary automaton with the CDFA:

|     | State     | a           |
|:----|:----------|:------------|
| I F | 1         | [2·4]       |
| F   | 2·4       | [3·5]       |
|     | 3·5       | [0·2]       |
|     | 0·2       | [3·4]       |
|     | 3·4       | [0·2·3·5]   |
|     | 0·2·3·5   | [0·2·3·4]   |
|     | 0·2·3·4   | [0·2·3·4·5] |
|     | 0·2·3·4·5 | [0·2·3·4·5] |

What do you want to do?

1- Standardisation
2- Determinization and completion
3- Minimization
4- Read a word
5- Complementary automaton
6- Select another automaton
0- Quit

-> 0
Goodbye.

